version: '3'
services:
  redis-container:
    image: "redis"
    container_name: redis-container
    restart: always
    command: redis-server
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - ffd-network
  mongo-container:
    image: mongo
    container_name: mongo-container
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - ffd-network

  mongo-gui-container:
    image: mongo-express
    container_name: mongo-gui-container
    restart: always
    ports:
      - "6503:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    depends_on:
      - mongo-container
    networks:
      - ffd-network
  
  backend-container:
    build: ./backend
    container_name: backend-container
    restart: always
    ports:
      - "6500:6500"
    depends_on:
      - mongo-container
      - redis-container
    networks:
      - ffd-network
  

  frontend-container:
    build: ./frontend
    container_name: frontend-container
    restart: always
    ports:
      - "6501:6501"
    depends_on:
      - backend-container
    networks:
      - ffd-network
  

  nginx-container:
    image: nginx
    container_name: nginx-container
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./fullchain.pem:/etc/nginx/certs/fullchain.pem
      - ./privkey.pem:/etc/nginx/certs/privkey.pem

    depends_on:
      - backend-container
      - frontend-container
    networks:
      - ffd-network

networks:
  ffd-network:
    driver: bridge